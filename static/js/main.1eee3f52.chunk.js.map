{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pagesAmount","Math","ceil","isFirstPageSelected","isLastPageSelected","getPageItemClass","condition","cn","disabled","_jsxs","className","children","_jsx","href","onClick","map","page","active","concat","perPageOptions","App","_useState","useState","_useState2","_slicedToArray","setSelectedPage","_useState3","_useState4","setPerPage","items","length","firstItem","lastItem","min","visibleItems","slice","id","value","onChange","event","Number","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAHC,GAKjC,IAJLC,EAAKD,EAALC,MACAC,EAAOF,EAAPE,QACAC,EAAWH,EAAXG,YACAC,EAAYJ,EAAZI,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAsC,IAAhBL,EACtBM,EAAqBN,IAAgBE,EAErCK,EAAmB,SAACC,GAAkB,OAAKC,IAAG,YAClD,CAAEC,SAAUF,KAEd,OACEG,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWL,EAAiBF,GAAqBQ,SACnDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVG,KAAK,QACL,gBAAeV,EACfW,QAAS,kBAAOX,GAAuBJ,EAAaD,EAAc,IAAGa,SACtE,WAKFvB,EAAW,EAAGY,GAAae,KAAI,SAACC,GAAI,OACnCJ,cAAA,MAEEF,UAAWH,IAAG,YAAa,CAAEU,OAAQnB,IAAgBkB,IAAQL,SAE7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVG,KAAI,IAAAK,OAAMF,GACVF,QAAS,kBAAMf,EAAaiB,IAAML,SAEjCK,KATEA,MAcTJ,cAAA,MAAIF,UAAWL,EAAiBD,GAAoBO,SAClDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVG,KAAK,QACL,gBAAeT,EACfU,QAAS,kBAAOV,GAAsBL,EAAaD,EAAc,IAAGa,SACrE,eCvDHQ,EAAiB,CAAC,EAAG,EAAG,GAAI,IAErBC,EAAgB,WAC3B,IAAAC,EAAuCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA3CvB,EAAWyB,EAAA,GAAEE,EAAeF,EAAA,GACnCG,EAA8BJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAAlC7B,EAAO8B,EAAA,GAAEC,EAAUD,EAAA,GAOpBE,EAbiCzC,EAAW,EAatB,IAbgC2B,KAAI,SAACvB,GAAC,cAAA0B,OAAa1B,MAczEI,EAAQiC,EAAMC,OACdC,GAAajC,EAAc,GAAKD,EAChCmC,EAAW/B,KAAKgC,IAAIpC,EAAUC,EAAaF,GAC3CsC,EAAeL,EAAMM,MAAMJ,EAAWC,GAE5C,OACEvB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAO,OACvBpB,EAAW,YAAAoB,OAAWa,EAAY,EAAC,OAAAb,OAAMc,EAAQ,QAAAd,OAAOtB,EAAK,OAGxEa,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRwB,GAAG,kBACH1B,UAAU,eACV2B,MAAOxC,EACPyC,SA1BY,SAACC,GACrBX,EAAWY,OAAOD,EAAME,OAAOJ,QAC/BZ,EAAgB,IAwBgBd,SAEvBQ,EAAeJ,KAAI,SAAC2B,GAAM,OACzB9B,cAAA,UAAqByB,MAAOK,EAAO/B,SAChC+B,GADUA,UAOnB9B,cAAA,SAAO+B,QAAQ,kBAAkBjC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAAClB,EAAU,CACTE,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACiB,GAAI,OAAKS,EAAgBT,MAG1CJ,cAAA,MAAAD,SACGuB,EAAanB,KAAI,SAAC6B,GAAI,OACrBhC,cAAA,MAAI,UAAQ,OAAMD,SACfiC,GADqBA,YC5DlCC,IAASC,OAAOlC,cAACQ,EAAG,IAAK2B,SAASC,eAAe,W","file":"static/js/main.1eee3f52.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport React from 'react';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const isFirstPageSelected = currentPage === 1;\n  const isLastPageSelected = currentPage === pagesAmount;\n\n  const getPageItemClass = (condition: boolean) => cn('page-item',\n    { disabled: condition });\n\n  return (\n    <ul className=\"pagination\">\n      <li className={getPageItemClass(isFirstPageSelected)}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPageSelected}\n          onClick={() => !isFirstPageSelected && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, pagesAmount).map((page) => (\n        <li\n          key={page}\n          className={cn('page-item', { active: currentPage === page })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={getPageItemClass(isLastPageSelected)}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPageSelected}\n          onClick={() => !isLastPageSelected && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst generateItems = (count: number) => getNumbers(1, count).map((n) => `Item ${n}`);\n\nconst perPageOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setSelectedPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setSelectedPage(1);\n  };\n\n  const items = generateItems(42);\n  const total = items.length;\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = Math.min(perPage * currentPage, total);\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            {perPageOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setSelectedPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}